version: 2
workflows:
  version: 2
  frontend:
    jobs:
      - frontend_build
      - frontend_test:
          filters:
            tags:
              ignore: /^ignore-testing-.*/
          requires:
            - frontend_build
      - frontend_deploy:
          filters:
            branches:
              only:
                - master
                - devops
          requires:
            - frontend_test
  backend:
    jobs:
      - backend_build
      - backend_test:
          filters:
            tags:
              ignore: /^ignore-testing-.*/
          requires:
            - backend_build
      - backend_deploy:
          filters:
            branches:
              only:
                - master
                - devops
          requires:
            - backend_test
jobs:
  frontend_build:
    docker:
      - image: circleci/node:8.9
    working_directory: ~/dos
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-dependencies-{{ checksum "frontend/yarn.lock" }}
      - run:
          name: "Checking Versions"
          command: |
            node --version
            npm --version
      - run:
          name: Install project dependencies
          command: cd frontend && yarn --frozen-lockfile
      - save_cache:
          key: yarn-dependencies-{{ checksum "frontend/yarn.lock" }}
          paths:
            -  ./frontend/node_modules
  frontend_test:
    docker:
      - image: circleci/node:8.9
    steps:
      - checkout
      - run:
          name: Install dependencies for lint and test
          command: cd frontend && yarn
      - run:
          name: Lint project
          command: cd frontend && yarn lint
      - run:
          name: Run unit tests
          command: cd frontend && yarn test
  frontend_deploy:
    docker:
      - image: circleci/node:8.9
    steps:
      - checkout
      - run:
          name: Install AWS tools
          command: sudo apt-get -y -qq install awscli
      - run:
          name: Build project
          command: cd frontend && yarn && yarn build
      - run:
          name: Deploy to AWS S3
          command: .circleci/deploy_frontend.sh
  backend_build:
    docker:
      - image: circleci/node:8.9
    working_directory: ~/dos
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-dependencies-{{ checksum "backend/yarn.lock" }}
      - run:
          name: "Checking Versions"
          command: |
            node --version
            npm --version
      - run:
          name: Install project dependencies
          command: cd backend && yarn --frozen-lockfile
      - save_cache:
          key: yarn-dependencies-{{ checksum "backend/yarn.lock" }}
          paths:
            -  ./backend/node_modules
  backend_test:
    docker:
      - image: circleci/node:8.9
        environment:
          NODE_ENV: test
          MAILGUN_API_KEY: 'local'
          MAILGUN_DOMAIN: 'local'
          DATABASE_URL: "postgres://dos@localhost:5432/dos"

      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: dos
          POSTGRES_DB: dos

    steps:
      - checkout
      - run:
          name: Install dependencies for lint and test
          command: cd backend && yarn
      - run:
          name: Lint project
          command: cd backend && yarn lint
      - run:
          name: Run migrations
          command: cd backend && npm run migrate
      - run:
          name: Run unit tests (todo)
          command: cd backend && npm run test
  backend_deploy:
    docker:
      - image: circleci/node:8.9
    steps:
      - checkout
      # - run:
      #     name: Install Python
      #     command: sudo apt-get install python3-dev python3-setuptools && sudo easy_install3 pip && sudo chown -R $USER:$USER ~/.local/ && export PATH=$PATH:~/.local/bin/
      # - run:
      #     name: Install AWS tools
      #     command: sudo pip install awsebcli --upgrade --user && eb --version
      # - run:
      #     name: Build project
      #     command: cd backend && yarn && yarn build
      # - run:
      #     name: Deploy to AWS S3
      #     command: .circleci/deploy_backend.sh